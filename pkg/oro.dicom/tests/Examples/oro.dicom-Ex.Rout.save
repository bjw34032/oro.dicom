
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "oro.dicom"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('oro.dicom')

oro.dicom: Rigorous - DICOM Input / Output (version = 0.2.3)

> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("dec2base")
> ### * dec2base
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dec2base
> ### Title: Convert Decimal to Base N Number in String
> ### Aliases: dec2base dec2hex
> ### Keywords: misc
> 
> ### ** Examples
> 
> x <- dec2base(23, 2)
> print(x) 
[1] "10111"
> 
> 
> 
> cleanEx()
> nameEx("dicomInfo")
> ### * dicomInfo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dicomInfo
> ### Title: Read Single DICOM File
> ### Aliases: dicomInfo
> ### Keywords: file
> 
> ### ** Examples
> 
> x <- dicomInfo(system.file("dcm/Abdo.dcm", package="oro.dicom"))
> graphics::image(x$img, col=grey(0:64/64), axes=FALSE, xlab="", ylab="")
> 
> x <- dicomInfo(system.file("dcm/Spine1.dcm", package="oro.dicom"))
> graphics::image(x$img, col=grey(0:64/64), axes=FALSE, xlab="", ylab="")
> 
> 
> 
> cleanEx()
> nameEx("extractHeader")
> ### * extractHeader
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: extractHeader
> ### Title: Extract Single Field from DICOM Headers
> ### Aliases: extractHeader
> ### Keywords: misc
> 
> ### ** Examples
> 
> x <- dicomInfo(system.file("dcm/Abdo.dcm", package="oro.dicom"))
> seriesDescription <- extractHeader(x$hdr, "SeriesDescription", numeric=FALSE)
> print(seriesDescription)
[1] "Liver/SpleeT2W/UTSE/RC$ COR    TSE   2000      100    90"
> IOP <- extractHeader(x$hdr, "ImageOrientationPatient", numeric=FALSE)
> print(IOP)
[1] "1.000000 0.000000 0.000000 0.000000 0.000000 -1.000000"
> 
> 
> 
> cleanEx()
> nameEx("header2matrix")
> ### * header2matrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: header2matrix
> ### Title: Converts DICOM Header Field to a Matrix
> ### Aliases: header2matrix
> 
> ### ** Examples
> 
> x <- dicomInfo(system.file("dcm/Abdo.dcm", package="oro.dicom"))
> pixelSpacing <- extractHeader(x$hdr, "PixelSpacing", numeric=FALSE)
> pSmat <- header2matrix(pixelSpacing, ncol=2)
> IOP <- extractHeader(x$hdr, "ImageOrientationPatient", numeric=FALSE)
> IOPmat <- header2matrix(IOP, ncol=6)
> 
> 
> 
> cleanEx()
> nameEx("matchHeader")
> ### * matchHeader
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: matchHeader
> ### Title: Match String to DICOM Header Field
> ### Aliases: matchHeader
> 
> ### ** Examples
> 
> x <- dicomInfo(system.file("dcm/Abdo.dcm", package="oro.dicom"))
> modality <- extractHeader(x$hdr, "Modality", numeric=FALSE)
> matchHeader(modality, "mr") # case insensitive by default
[1] TRUE
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.81 0.03 0.841 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
